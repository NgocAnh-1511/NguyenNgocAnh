#include <iostream>
#include <string>
using namespace std;

struct Phong {
    int soPhong;
    string loaiPhong;
    int tinhTrang; // 0: đang trống, 1: đã được thuê
    string tenKhachHang;
    Phong* next;
};

typedef Phong* List;

void InitList(List &L) {
    L = NULL;
}

void AddPhong(List &L, int soPhong, string loaiPhong) {
    Phong* newPhong = new Phong;
    newPhong->soPhong = soPhong;
    newPhong->loaiPhong = loaiPhong;
    newPhong->tinhTrang = 0; // Khởi tạo tất cả các phòng ở tình trạng trống
    newPhong->tenKhachHang = "";
    newPhong->next = NULL;

    if (L == NULL) {
        L = newPhong;
    } else {
        Phong* P = L;
        while (P->next != NULL) {
            P = P->next;
        }
        P->next = newPhong;
    }
}

void KhoiTaoDSLK(List &L) {
    // Khởi tạo 10 phòng loại "RR"
    for (int i = 1; i <= 10; i++) {
        AddPhong(L, i, "RR");
    }

    // Khởi tạo 30 phòng loại "DB"
    for (int i = 11; i <= 40; i++) {
        AddPhong(L, i, "DB");
    }

    // Khởi tạo 60 phòng loại "TC"
    for (int i = 41; i <= 100; i++) {
        AddPhong(L, i, "TC");
    }
}

void ThuePhong(List &L, int soPhong, string tenKhachHang) {
    Phong* P = L;
    while (P != NULL) {
        if (P->soPhong == soPhong) {
            if (P->tinhTrang == 0) { // phòng đang trống
                P->tinhTrang = 1;
                P->tenKhachHang = tenKhachHang;
                cout << "Phong " << soPhong << " da duoc thue boi " << tenKhachHang << endl;
            } else {
                cout << "Phong " << soPhong << " da duoc thue roi!" << endl;
            }
            return;
        }
        P = P->next;
    }
    cout << "Khong tim thay phong so " << soPhong << endl;
}

void TraPhong(List &L, int soPhong) {
    Phong* P = L;
    while (P != NULL) {
        if (P->soPhong == soPhong) {
            if (P->tinhTrang == 1) { // phòng đang được thuê
                P->tinhTrang = 0;
                P->tenKhachHang = "";
                cout << "Phong " << soPhong << " da duoc tra ve tinh trang trong." << endl;
            } else {
                cout << "Phong " << soPhong << " dang trong, khong can tra." << endl;
            }
            return;
        }
        P = P->next;
    }
    cout << "Khong tim thay phong so " << soPhong << endl;
}

void LietKePhongTCConTrong(List L) {
    Phong* P = L;
    cout << "Cac phong loai TC con trong:\n";
    while (P != NULL) {
        if (P->loaiPhong == "TC" && P->tinhTrang == 0) {
            cout << "Phong so " << P->soPhong << " (TC) dang trong." << endl;
        }
        P = P->next;
    }
}

int main() {
    List L;
    InitList(L); 
    KhoiTaoDSLK(L);

    // Nhập dữ liệu cho thuê phòng
    ThuePhong(L, 5, "Nguyen Van A");
    ThuePhong(L, 45, "Tran Thi B");
    ThuePhong(L, 75, "Le Van C");

    // Trả phòng
    TraPhong(L, 45);

    // Liệt kê các phòng loại TC còn trống
    LietKePhongTCConTrong(L);

    return 0;
}

